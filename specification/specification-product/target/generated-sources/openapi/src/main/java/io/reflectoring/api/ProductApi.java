/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.reflectoring.api;

import io.reflectoring.model.ProductDetail;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-06T19:07:50.625506200-05:00[America/Bogota]")

@Validated
@Api(value = "product", description = "the product API")
public interface ProductApi {

    default ProductApiDelegate getDelegate() {
        return new ProductApiDelegate() {};
    }

    /**
     * GET /product/{productId}/similar : Get product detail of the similar products for a given one
     *
     * @param productId Identifier of the product from which you want to obtain similar products (required)
     * @return successful operation (status code 200)
     *         or Product Not found (status code 404)
     */
    @ApiOperation(value = "Get product detail of the similar products for a given one", nickname = "getProductSimilar", notes = "", response = ProductDetail.class, responseContainer = "List", tags={ "similarproducts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProductDetail.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Product Not found") })
    @RequestMapping(value = "/product/{productId}/similar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<ProductDetail>> getProductSimilar(@ApiParam(value = "Identifier of the product from which you want to obtain similar products",required=true) @PathVariable("productId") String productId) {
        return getDelegate().getProductSimilar(productId);
    }

}
